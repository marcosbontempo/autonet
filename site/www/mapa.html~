<!DOCTYPE html>
<style>
	html, body {
		height: 100%;
		margin: 0px;
		padding: 0px
	}
	#map-canvas {
		top: 53px;
		left: 298px;
		position: absolute;
		z-index: 200;
	}
	.controls {
		margin-left: 22px;
		margin-top: -10px;
		background: url('css/images/search.png') no-repeat 10px 6px #FFF;
		height: 25px;
		width: 221px;
		outline: none;
	}
	#pac-input {
		border: 1px solid #848484;
		font-family:'Titillium Web', sans-serif;
		padding-left: 35px;
		padding-bottom: 2px;
		text-overflow: ellipsis;
	}
	#pac-input:focus {
		border-color: #4488cc; 
		border-style: solid; 
		border-width: 2px; 
		outline: 0; 
	}
	.pac-container {
		font-family: Roboto;
	}
	#type-selector {
		color: #fff;
		background-color: #4d90fe;
		padding: 5px 11px 0px 11px;
	}
	#type-selector label {
		font-family: Roboto;
		font-size: 13px;
		font-weight: 300;
	}
	#target {
		width: 345px;
	}
</style>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=false&libraries=places"></script>
<script>
	
////////////////////////////////////////////////////////////////////////////////////////
//VARIAVEIS
var rendererOptions = {
  draggable: true
};
var cont=0;
var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
var directionsService = new google.maps.DirectionsService();
var gw_data;
directionsRenderer = new google.maps.DirectionsRenderer(
{
    map: map
});
var map;
var stepDisplay;
var markerArray = [];
var geocoder;
var countCarros = [];
var orderCarros = [];
var rotaCerta;
var srs = new google.maps.LatLng(-22.2613049,-45.7021344);
var vr = new google.maps.LatLng(-23.2613049,-45.7021344);
var global_location_lat;
var global_location_lng;
var gps_position=0;
var arr;
var mapOptions = {
	zoom: 15,
    center: srs
};

/////////////////////////////////////////////////////////////////////////////////////////
// INICIALIZACAO DO MAPA
function initialize() {

    load();
    load_car();

    var markers = [];
    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    stepDisplay = new google.maps.InfoWindow();

    // Create the search box and link it to the UI element.
    var input = /** @type {HTMLInputElement} */
    (
    document.getElementById('pac-input'));
    var searchBox = new google.maps.places.SearchBox( /** @type {HTMLInputElement} */ (input));

    // [START region_getplaces]
    // Listen for the event fired when the user selects an item from the
    // pick list. Retrieve the matching places for that item.
    google.maps.event.addListener(searchBox, 'places_changed', function () {
        var places = searchBox.getPlaces();
        cont++;
        if (places.length == 0) {
            return;
        }
        for (var i = 0, marker; marker = markers[i]; i++) {
            marker.setMap(null);
        }
        // For each place, get the icon, place name, and location.
        markers = [];
        var bounds = new google.maps.LatLngBounds();
        for (var i = 0, place; place = places[i]; i++) {
            var image = {
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(25, 25)
            };
            var location = place.geometry.location;
            global_location_lat = place.geometry.location.lat();
            global_location_lng = place.geometry.location.lng();
            requestDirections(gps_position, location, 0, true);
        }
        map.fitBounds(bounds);
    });
    // [END region_getplaces]

    // Bias the SearchBox results towards places that are within the bounds of the
    // current map's viewport.
    google.maps.event.addListener(map, 'bounds_changed', function () {
        var bounds = map.getBounds();
        searchBox.setBounds(bounds);
    });

    google.maps.event.addListener(directionsDisplay, 'directions_changed', function () {
        computeTotalDistance(directionsDisplay.getDirections());
    });

    directionsDisplay.setMap(map);
    directionsDisplay.setPanel(document.getElementById('directionsPanel'));
}

////////////////////////////////////////////////////////////////////////////////////////
function getRendererOptions(main_route) {
    if (main_route) {
        var _colour = '#00458E';
        var _strokeWeight = 4;
        var _strokeOpacity = 1.0;
        var _suppressMarkers = false;
    } else {
        var _colour = '#ED1C24';
        var _strokeWeight = 2;
        var _strokeOpacity = 0.7;
        var _suppressMarkers = false;
    }
    var polylineOptions = {
        strokeColor: _colour,
        strokeWeight: _strokeWeight,
        strokeOpacity: _strokeOpacity
    };
    var rendererOptions = {
        draggable: false,
        suppressMarkers: _suppressMarkers,
        polylineOptions: polylineOptions
    };
    return rendererOptions;
}

////////////////////////////////////////////////////////////////////////////////////////
function renderDirections(result, rendererOptions, routeToDisplay) {
    if (routeToDisplay == rotaCerta) {
        var _colour = '#00458E';
        var _strokeWeight = 4;
        var _strokeOpacity = 1.0;
        //var _strokeOpacity = 0;
        var _suppressMarkers = false;
    } else {
        //var _colour = '#ED1C24';
        var _colour = "#FF0000";
        var _strokeWeight = 4;
        var _strokeOpacity = 0.7;
        //var _strokeOpacity = 0;
        var _suppressMarkers = false;
    }
    // if (routeToDisplay == 0) _colour = "#FF0000";
    // create new renderer object
    var directionsRenderer = new google.maps.DirectionsRenderer({
        draggable: false,
        suppressMarkers: _suppressMarkers,
        polylineOptions: {
            strokeColor: _colour,
            strokeWeight: _strokeWeight,
            strokeOpacity: _strokeOpacity
        }
    });
    directionsRenderer.setMap(map);
    directionsRenderer.setDirections(result);
    directionsRenderer.setRouteIndex(routeToDisplay);
}

////////////////////////////////////////////////////////////////////////////////////////
function apaga(result, rendererOptions, routeToDisplay) {
    var _colour = '#00458E';
    var _strokeWeight = 4;
    var _strokeOpacity = 0;
    var _suppressMarkers = false;

    // if (routeToDisplay == 0) _colour = "#FF0000";
    // create new renderer object
    var directionsRenderer = new google.maps.DirectionsRenderer({
        draggable: false,
        suppressMarkers: _suppressMarkers,
        polylineOptions: {
            strokeColor: _colour,
            strokeWeight: _strokeWeight,
            strokeOpacity: _strokeOpacity
        }
    });

    directionsRenderer.setMap(map);
    directionsRenderer.setDirections(result);
    directionsRenderer.setRouteIndex(routeToDisplay);
}

////////////////////////////////////////////////////////////////////////////////////////
function attachInstructionText(marker, text) {
    google.maps.event.addListener(marker, 'click', function () {
        // Open an info window when the marker is clicked on,
        // containing the text of the step.
        stepDisplay.setContent(text);
        stepDisplay.open(map, marker);
    });
}

////////////////////////////////////////////////////////////////////////////////////////
function getSteps(myRoute) {
    for (var j = 0; j < myRoute.routes.length; j++) {
        //Zera o vetor de contagem de carros
        countCarros[j] = 0;
        //Le cada passo da rota
        for (var i = 0; i < myRoute.routes[j].legs[0].steps.length; i++) {
            // out += '<a>' + myRoute.routes[j].legs[0].steps[i].start_location + '</a><br>';
            // Compara cada passo da rota com a contagem das cameras
            for (k = 0; k < gw_data.length; k++) {

                if (gw_data[k].latlng == myRoute.routes[j].legs[0].steps[i].start_location) {
                    countCarros[j] = countCarros[j] + gw_data[k].cars;
                }
            }
        }
    }

    //Obtem a roda menos congestionada
    //Carrega o vetor de backup com a quantidade de carros por rota
    for (m = 0; m < myRoute.routes.length; m++) {
        orderCarros[m] = countCarros[m];
    }

    //Ordena o vetor com o numero de carros
    orderCarros.sort(function (a, b) {
        return a - b
    });
    for (m = 0; m < myRoute.routes.length; m++) {
        if (countCarros[m] == orderCarros[0]) {
            rotaCerta = m;
        }
    }

	//Direciona para o arquivo rota
    setTimeout(function () {
        window.location.href = "rota.html?" + global_location_lat + "&" + global_location_lng;
    }, 5000);
}

////////////////////////////////////////////////////////////////////////////////////////
function requestDirections(start, end, routeToDisplay, main_route) {
    // First, remove any existing markers from the map.
    for (var i = 0; i < markerArray.length; i++) {
        markerArray[i].setMap(null);
    }

    // Now, clear the array itself.
    markerArray = [];
    var request = {
        origin: start,
        destination: end,
        travelMode: google.maps.DirectionsTravelMode.DRIVING,
        provideRouteAlternatives: main_route
    };

    directionsRenderer.setMap(null);
    directionsService.route(request, function (result, status) {
        var rotaCerta = getSteps(result);
        if (status == google.maps.DirectionsStatus.OK) {
            if (main_route) {
                var rendererOptions = getRendererOptions(true);
                for (var i = 0; i < result.routes.length; i++) {
                    renderDirections(result, rendererOptions, i);
                }
            } else {
                var rendererOptions = getRendererOptions(false);
                renderDirections(result, rendererOptions, routeToDisplay);
            }
        }
    });
}

////////////////////////////////////////////////////////////////////////////////////////
function computeTotalDistance(result) {
    var total = 0;
    var myroute = result.routes[0];
    for (var i = 0; i < myroute.legs.length; i++) {
        total += myroute.legs[i].distance.value;
    }
    total = total / 1000.0;
    document.getElementById('total').innerHTML = total + ' km';
}

////////////////////////////////////////////////////////////////////////////////////////
function load() {
    var xmlhttp = new XMLHttpRequest();
    var url = "scripts/gps.js?callback=?";

    xmlhttp.onreadystatechange = function () {
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
            var pos_read = JSON.parse(xmlhttp.responseText);
            gps_position = new google.maps.LatLng(pos_read[0].lat, pos_read[0].lng);
        }
    }
    xmlhttp.open("GET", url, true);
    xmlhttp.send();

    return;
}

////////////////////////////////////////////////////////////////////////////////////////
function load_car() {
    var xmlhttp = new XMLHttpRequest();
    var url = "scripts/camera.js?callback=?";

    xmlhttp.onreadystatechange = function () {
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
            gw_data = JSON.parse(xmlhttp.responseText);
            //alert(gw_data);
        }
    }
    xmlhttp.open("GET", url, true);
    xmlhttp.send();

    return;
}

////////////////////////////////////////////////////////////////////////////////////////
setInterval(load, 1000);
setInterval(load_car, 1000);

//no corpo:     
google.maps.event.addDomListener(window, 'load', initialize);
/////////////////////////////////////////////////////////////////////////////////////////
</script>
<script src="scripts/jquery.min.js"></script>
	
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Tráfego Online</title>
<meta name="keywords" content="" />
<meta name="description" content="" />
<link rel="icon" href="favicon.ico" type="image/ico" sizes="16x16">
<link href='http://fonts.googleapis.com/css?family=Oswald:400,300' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Signika:700' rel='stylesheet' type='text/css'>
<link href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600,700,900" rel="stylesheet" />
<link href="http://fonts.googleapis.com/css?family=Titillium+Web:300" rel="stylesheet" />
<link href='http://fonts.googleapis.com/css?family=Anton' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Francois+One' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Cuprum' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="font-awesome-4.3.0/css/font-awesome.min.css">
<link href="css/defaultmap.css" rel="stylesheet" type="text/css" media="all" />
</head>
<body>		
<div style="-moz-user-select: none; position: relative; background-color: #F1F1F1; display:block; align: left; max-width:30%; height:100%; border-right: 2px solid #d4d4d4; box-shadow: 1px 0px 0px 0px #000;">
	<div style="min-height:41px; padding-top:10px; padding-left: 240px; border-bottom: 1px solid #afc6ff; border-top: 1px solid #afc6ff; box-shadow: 0 1px 0 #2965fc; background-color:#5987fb; color:#fff; text-shadow: 0 1px 0 #5678ce;"><i class="fa fa-street-view fa-2x"></i></div>
	<div style="margin-top:-45px; margin-left:25px;"><font style="text-shadow: 0 1px 0 #5678ce; font-family:'Oswald'; color:#fff; font-size:25px; line-height:35px;">Seu destino</font></div>
	<div style="margin-top:30px; margin-left:3px;"><i class="fa fa-share-square fa-lg" style="padding-left:20px; position: absolute; margin-top:3px;"></i><font style="padding: 0.50em 2.8em; font-family:'Oswald', sans-serif; font-color:#999; font-weight:500; font-size:15px;">Digite o local de escolha</font></div>
	<form action="" class="search">
	<input id="pac-input" class="controls" type="text" placeholder="Pesquisa" style="margin-top:6px;">
	<div style="margin-top:20px; margin-left:3px;"><i class="fa fa-map-marker fa-lg" style="padding-left:21px; position: absolute; margin-top:2px;"></i><font style="padding: 0.50em 2.6em; font-family:'Oswald', sans-serif; font-color:#999; font-weight:500; font-size:15px;">Localização Atual</font></div>
	<input class="textbox" value="Av. Antônio de Cássia, 335" style="margin-left:23px; margin-top:6px;" disabled>
	</form>
</div>
<div id="header-wrapper">
	<div id="header" class="container">
		<div class="mainmenu">
			<ul>
				<li><a href="index.html" accesskey="1" title=""><i class="fa fa-home fa-lg"></i><main>Página Inicial</main><desc></desc></a></li>
				<li id="current_page_item"><a href="#" accesskey="2" title=""><i class="fa fa-road fa-lg"></i><main>Tráfego Online</main><desc></desc></a></li>
				<li><a href="parking.html" accesskey="3" title=""><i class="fa fa-car fa-lg"></i><main>Estacionamento</main><desc></desc></a></li>
				<li><a href="chat_js.html" accesskey="4" title=""><i class="fa fa-comments fa-lg"></i><main>Chat</main><desc></desc></a></li>
				<li><a href="social.html" accesskey="5" title=""><i class="fa fa-users fa-lg"></i><main>Social</main><desc></desc></a></li>
			</ul>
		</div>
	</div>
</div>

		<div class="glossy-selectbox">
			<input type="checkbox" id="gear"/><label for="gear" class="fa fa-gear fa-2x" style="position:absolute; top:-17px; right:-3px; z-index: 2;"></label>
			<ul>
				<li><a href="#" target="_blank"><i class="fa fa-volume-up fa-lg" style="padding-right:5px;"></i> Voz</a></li>
				<li><a href="#" target="_blank"><i class="fa fa-user fa-lg" style="padding-right:8px;"></i> Preferências</a></li>
				<li><a href="#" target="_blank"><i class="fa fa-sign-out fa-lg" style="padding-right:5px;"></i> Sair</a></li>
			</ul>
		</div>

<div id="map-canvas" style="float:left;width:684px; height:406px"></div>

<div id="logo"><h2><h3 style="position:relative; z-index:200; margin-top:-30px; letter-spacing:0.20em; font-family: 'Cuprum'; font-size: 12px; font-weight:300; text-transform:uppercase; color:#ccc; text-shadow: 0 1px 0 #000;"><i class="fa fa-copyright"></i> Copyright 2014-2015. Todos os direitos reservados | Contato - <b style="color: #FFBF00">autonet@autonet.br</b></h3></h2></div>

</body>
</html>
